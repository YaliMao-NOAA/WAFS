#!/bin/ksh

set -x

#/*----------------------------------------*/
#/* Initialize Module Environment for bsub */
#/*----------------------------------------*/
. /usrx/local/Modules/default/init/bash
module load lsf ics ibmpe
module list
module load GrADS

user=`whoami`
export PDY=${PDY:-`cut -c 7-14 /com/date/t${cyc}z`}

#export WCOSSSAVE=${WCOSSSAVE:-/sss/emc/global/shared/Yali.Mao/save}
export WCOSSSAVE=${WCOSSSAVE:-/global/save/Yali.Mao/save}

COMPLOT=/ptmpp1/${user}/plot.$PDY
DATAPLOT=/ptmpp1/${user}/plot.$PDY.working

COMOUT=/ptmpp1/${user}/gfip.$PDY
DATA=/ptmpp1/${user}/gfip.$PDY.working

mkdir -p $DATA
cd $DATA

########################################################
# Only run the script on develop machine:
# 1st letter of developMachine & thisMachine must match
########################################################
developMachine=`cat /etc/dev` # tide/gyre
thisMachine=`hostname` 
if [ `echo $developMachine | cut -c 1-1` != `echo $thisMachine | cut -c 1-1` ] ; then
  exit
fi

########################################################
#### Step 1: create icing potential and severity   #####
########################################################
sed -e "/^#/! s/export PDY=.*/export PDY=$PDY/g" \
    -e "/^#/! s/export cyc=.*/export cyc=$cyc/g" \
    $WCOSSSAVE/wafs_run/run_post_gfs_Grib2.sh \
    > run_post_gfs_Grib2.sh

sed -e "s|oo /ptmpp1/.*|oo /ptmpp1/$user/out.post.gfs.Grib2|g" \
    -e "s|eo /ptmpp1/.*|oo /ptmpp1/$user/err.post.gfs.Grib2|g" \
    -i run_post_gfs_Grib2.sh

sed -e "/^#/! s|export DATA=.*|export DATA=$DATA|g" \
    -e "/^#/! s|export COMOUT=.*|export COMOUT=$COMOUT|g" \
    -i run_post_gfs_Grib2.sh

jobSubmit=`bsub < run_post_gfs_Grib2.sh`

jobID=`echo $jobSubmit | sed -e 's/.*Job <//g' | sed -e 's/> is.*//'`

if [[ -n $jobID ]]; then
   # wait reasonable long time till a job is possibly done
   sleep 180
   # Wait till this job is done
   result=`bjobs | grep $jobID`
   while [[ -n $result ]]; do
      sleep 60
      result=`bjobs | grep $jobID`
   done
fi # -n $jobID

run=exp

########################################################
#### Step 2: ftp grib2 data to RZDM FTP server      ####
########################################################
ksh $WCOSSSAVE/scripts/ftp_wafs.sh $run gfip $PDY$cyc

########################################################
### Step 3: grads plots. ftp to RZDM icao WEB server ###
########################################################
mkdir -p $COMPLOT

mkdir -p $DATAPLOT
cd $DATAPLOT
rm -f *

cp $COMOUT/*t${cyc}z*grb2f* .
for grb2file in `ls` ; do
   ksh $WCOSSSAVE/grads/plotWafs.sh original potential $grb2file
   ksh $WCOSSSAVE/grads/plotWafs.sh original severity  $grb2file
   ksh $WCOSSSAVE/grads/plotWafs.sh conus  potential $grb2file
   ksh $WCOSSSAVE/grads/plotWafs.sh conus  severity  $grb2file
   ksh $WCOSSSAVE/grads/plotWafs.sh hawaii potential $grb2file
   ksh $WCOSSSAVE/grads/plotWafs.sh hawaii severity  $grb2file
   ksh $WCOSSSAVE/grads/plotWafs.sh alaska potential $grb2file
   ksh $WCOSSSAVE/grads/plotWafs.sh alaska severity  $grb2file
done

mv *.png $COMPLOT/.
rm -r $DATAPLOT
ksh $WCOSSSAVE/scripts/ftp_wafs.sh $run plot $PDY$cyc

########################################################
#### Step 4: cleanup if data  48 hours before       ####
####         update grib plotting web page as well  ####
########################################################
dates=$PDY
dates="$dates "`/nwprod/util/exec/ndate -1 ${PDY}00 | cut -c1-8`
if [[ $cyc <  18 ]] ; then
    dates="$dates "`/nwprod/util/exec/ndate -25 ${PDY}00 | cut -c1-8`
fi
ssh ymao@emcrzdm "sh ~/scripts/wafs_web.ftp_maintenance.sh $run $cyc $dates"
